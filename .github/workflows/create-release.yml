name: Create Release on Version Update

on:
  push:
    branches:
      - master
    paths:
      - 'mousetracks2/version.py'

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: windows-latest
    steps:
      - name: Checkout full repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create virtual environment
        shell: cmd
        run: |
          python -m venv .venv

      - name: Update components
        shell: cmd
        run: |
          call .venv\Scripts\activate
          python -m pip install --upgrade pip wheel
          call .venv\Scripts\deactivate

      - name: Install dependencies
        shell: cmd
        run: |
          call .venv\Scripts\activate
          python -m pip install --upgrade -r requirements.txt
          call .venv\Scripts\deactivate

      - name: Read version details
        id: extract_version
        shell: python
        run: |
          import os
          from mousetracks2 import __version__ as version

          tag_name = f"v{version}"  # e.g., v1.0.0
          release_name = f"MouseTracks {version}" # e.g., MouseTracks 2.0.0

          print(f"Extracted Version: {version}")
          print(f"Generated Tag Name: {tag_name}")
          print(f"Generated Release Name: {release_name}")

          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f"version={version}", file=fh)
              print(f"tag_name={tag_name}", file=fh)
              print(f"release_name={release_name}", file=fh)

      - name: Check if tag already exists
        shell: bash
        run: |
          TAG_NAME="${{ steps.extract_version.outputs.tag_name }}"
          echo "Checking for existing tag: $TAG_NAME"
          # git rev-parse exits with non-zero status if tag doesn't exist
          if git rev-parse --verify "refs/tags/$TAG_NAME" >/dev/null 2>&1; then
            echo "::error::Tag $TAG_NAME already exists. Halting workflow to prevent duplicate release."
            echo "Please ensure __version__ in 'mousetracks2/version.py' is incremented to a new version."
            exit 1
          else
            echo "Tag $TAG_NAME does not exist. Proceeding to create tag and release."
          fi

      # - name: Configure Git committer
      #   shell: bash
      #   run: |
      #     git config user.name "${{ github.actor }}"
      #     git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Create Git Tag and Push
        shell: bash
        run: |
          TAG_NAME="${{ steps.extract_version.outputs.tag_name }}"
          COMMIT_SHA="${{ github.sha }}" # The commit that updated version.py
          RELEASE_NAME="${{ steps.extract_version.outputs.release_name }}"

          echo "Creating annotated tag $TAG_NAME for commit $COMMIT_SHA"
          # Create an annotated tag (recommended for releases)
          git tag -a "$TAG_NAME" -m "$RELEASE_NAME - triggered by commit changing version.py" "$COMMIT_SHA"

          echo "Pushing tag $TAG_NAME to origin"
          git push origin "$TAG_NAME"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_RELEASE_TOKEN }}  # Permissions: Contents RW
        with:
          tag_name: ${{ steps.extract_version.outputs.tag_name }}
          name: ${{ steps.extract_version.outputs.release_name }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

